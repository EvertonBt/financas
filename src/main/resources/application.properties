#postgres
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/financas?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=postgres
spring.datasource.password=123456789



# MySQL
#spring.datasource.url=jdbc:mysql://localhost:3306/financas?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&useTimezone=true&serverTimezone=GMT
#spring.datasource.username=root
#spring.datasource.password=
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl



#SQL.
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.initialization-mode=always
#suporta as opções drop, create, create-drop, none (mude p/ none caso queira usar o flyway)
spring.jpa.hibernate.ddl-auto=update 


#tomcat
server.port=8010

#jackson (reponsavel pela conversão java p/ json e vice-versa)
#gera erro 400 bad request qnd o cliente infromar atriutos inválidos na hora de salvar uma categoria
spring.jackson.deserialization.fail-on-unknown-properties=true

#formata data em json
spring.jackson.date-format=yyyy-MM-dd

#spring security
spring.security.user.name=user
spring.security.user.password=user
